@model RegistrationAdvisory.Models.DeleteModifyModel

@{
    ViewBag.Title = "ModifyCourse";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Modify Course</h2>
@*@{ 
        var CatSelectFormErrors = ViewData.ModelState.Where(m => m.Key == "CatSelectForm");

        if(CatSelectFormErrors.Count() > 0)
        {
        <div class="cdt-error-list">
            <ul>
            @foreach(var entry in CatSelectFormErrors)
            {
                foreach (var error in entry.Value.Errors)
                {
                    <li> @error.ErrorMessage </li>
                    }
            }
         </ul>
        </div>
        }
}*@
<h4><span style="color:green">@ViewBag.status</span></h4>
<h4><span style="color:red">@ViewBag.modelError</span></h4>

@using (Html.BeginForm("ModifyCourse", "Adviser"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.courseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.courseId, new { htmlAttributes = new { @class = "form-control" } })
                  
                       @*@Html.ValidationMessageFor(model => model.courseId, "", new { @class = "text-danger" })*@
                     

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.courseCat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.courseCat, Model.courseCats, "Select Course Category", new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.courseCat, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" name="cmd"class="btn btn-default" />
            </div>
        </div>
    </div>


}



@using (Html.BeginForm("ModifyCourse", "Adviser", FormMethod.Post))
{
    
    if (RegistrationAdvisory.Models.UserSession.COURSECATEGORYTOMODIFY != "")
    {
   <table class="table table-bordered">
       <tr><th>Course ID</th><th>Course Description</th><th>Semester Offered</th><th>Credit</th></tr>
      
       <tr>
           @*<td>ViewBag.courseId</td><td>@ViewBag.courseDesc</td><td>@ViewBag.offering</td><td>@ViewBag.credit</td>*@
           <td><input type="text" value="@ViewBag.courseId" name="courseId" readonly /></td>
           <td><input type="text" value="@ViewBag.courseDesc" name="courseDesc" style="background-color:yellow"/></td>
           <td><input type="text" value="@ViewBag.offering" name="offering" style="background-color:yellow"/></td>
           <td><input type="text" value="@ViewBag.credit" name="credit" style="background-color:yellow"/></td>
       </tr>
       
   </table>
    <input type="submit" value="Update" name="cmd" class="btn btn-default"/>
   }
 }

<div>
    @Html.ActionLink("Back to Control Panel", "Panel", "Adviser")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
